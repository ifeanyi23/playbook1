# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
commands:
  destroy-environment:
    steps:
      - run:
          name: Destroy Environment
           # ${CIRCLE_WORKFLOW_ID} is a Built-in environment variable 
           # ${CIRCLE_WORKFLOW_ID:0:5} takes the first 5 chars of the variable CIRCLE_CI_WORKFLOW_ID
          when: on_fail
          command: |
            aws cloudformation delete-stack --stack-name joeStack-${CIRCLE_WORKFLOW_ID:0:5}
jobs:
  create-infrastructure:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: amazon/aws-cli
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout      
      - run:
          name: "Create Cloudformation Stack"
          command: | 
            aws cloudformation deploy \
              --template-file template.yml \
              --stack-name joeStack-${CIRCLE_WORKFLOW_ID:0:5} \
              --region us-east-1 \
      
              
  configure_infrastructure: 
    docker:
      - image: python:3.7-alpine3.11
    steps:
      - checkout
      - add_ssh_keys:
              # You can get this ID in the section where you registered the SSH Key
              fingerprints: ["c5:44:10:bc:5c:18:5f:c5:fc:b7:1a:6a:e4:82:73:45"]
      - run:
          name: Install Ansible
          command: |
            # Install Ansible
            apk add --update ansible
      - run:
          name: Run Playbook and Configure server
          command: |
            ansible-playbook -i inventory main-remote.yml
  smoke-test:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Test Job
          command: return 1
      - destroy-environment
  create_and_deploy_front_end:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: "Create cloudfront stack"
          command: |
            aws cloudformation deploy \
            --template-file bucket.yml \
            --stack-name stack-create-bucket-${CIRCLE_WORKFLOW_ID:0:7} \
            --parameter-overrides MyBucketName="mybucket-${CIRCLE_WORKFLOW_ID:0:7}"
      - run:
          name: "Upload all contents of current directory to the s3 bucket"
          command: |
            aws s3 sync . s3://mybucket-${CIRCLE_WORKFLOW_ID:0:7} --delete
      - destroy-environment
  # smoke-test:
  #   docker:
  #     - image: alpine:latest
  #   steps:
  #     - checkout
  #     - run:
  #         name: Install curl
  #         command: apk add --update curl
  #     - run:
  #         name: Smoke Test
  #         command: |
  #           URL="https://blog.udacity.com/"
  #           if curl -s --head ${URL}
  #           then
  #             return 0
  #           else
  #             return 1
  #           fi  



# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  infrastructure-workflow:
    jobs:
      - create_and_deploy_front_end
      # - create-infrastructure
      # # - configure_infrastructure
      # - smoke-test:
      #     requires:
      #       - create-infrastructure
          
